
9:00 ~ 10:50

erd

쇼핑몰 shopdb

회원가입 users
create table users(
userid varchar(20) not null,
name varchar(10) not null,
primary key(userid)
);

카트 cart 
create table cart(
pro_num varchar(20) not null,
pro_name varchar(100),
pro_price int,
cart_id int not null auto_increment, 
userid_fk varchar(20) not null,
primary key(cart_id),
foreign key(userid_fk) references users(userid)
);

상품구매 buy
create table buy(
buy_id int not null auto_increment,
pro_num varchar(20) not null,
pro_name varchar(100),
pro_price int,
pro_count int,
pro_delivery char(1),
userid varchar(20) not null,
primary key(buy_id),
foreign key(userid) references users(userid)
);

카테고리 category
create table category(
cate_name varchar(20) not null,
primary key(cate_name)
);
insert into category values('컴퓨터');
insert into category values('노트북');
insert into category values('스마트폰');

상품등록 product
create table product(
pro_num varchar(20) not null,
pro_name varchar(100),
pro_price int,
pro_count int,
cate_name varchar(20) not null,
primary key(pro_num),
foreign key(cate_name) references category(cate_name) ON UPDATE cascade ON DELETE restrict
);
insert into product values('101', 'LG TV', 1, 1, '가전'); -> 오류 발생
insert into product values('101', 'LG 컴퓨터', 1, 1, '컴퓨터');

-> 카테고리(부모) 값 바꿔보기

delete from category where cate_name = '컴퓨터'; -> 오류 발생

update category set cate_name = '컴퓨터2' where cate_name = '컴퓨터';
select * from category;
select * from product;

외래키 무결성 제약조건
수정 update : 대분류를 변경하게 된다면 상품을 어떻게...

ON UPDATE cascade

삭제 delete : 대분류를 삭제하게 된다면 상품을 삭제

ON DELETE restrict

연결 t1, t2 연결해서 하나로 만들기
category, product를 연결해서 대분류, 상품번호, 상품명, 구매개수, 가격 순으로 출력
(단, 대분류가 같은 것만 출력하세요.)

insert into product values('102', '갤럭시 21', 2, 2, '스마트폰');

select * from 테이블명1, 테이블명2;
select * from category, product;
select cate_name, pro_num, pro_name, pro_count, pro_price from category, product;
-> 대분류는 부모것을 사용
select 
category.cate_name, 
product.pro_num, 
product.pro_name, 
product.pro_count, 
product.pro_price 
from category, product;

-> 테이블 별명 부여
select 
C.cate_name, 
P.pro_num, 
P.pro_name, 
P.pro_count, 
P.pro_price 
from category C, product P;

-> 대분류가 같은것만 출력하기
select 
C.cate_name,
P.pro_num, 
P.pro_name, 
P.pro_count, 
P.pro_price 
from category C, product P where C.cate_name = P.cate_name;

-------------------------------------------------------------------------

11:00 ~ 11:50

inner join - 테이블이 2개일 때
select 출력컬럼 from t1, t2 where t1.컬럼 = t2.컬럼;
=
select 출력컬럼 from t1 inner join t2 on t1.컬럼 = t2.컬럼;

테이블이 3개일 때

select 출력컬럼 from t1 inner join t2 on t1.컬럼 = t2.컬럼
inner join t3 on t2.컬럼 = t3.컬럼;

분류 테이블 컬럼 전부, 상품 테이블 컬럼 전부를 출력하세요.

select C.*, P.* from category C 
inner join product P on 
C.cate_name = P.cate_name;

분류 테이블의 분류 컬럼과 상품 테이블의 상품번호, 상품이름만 출력하세요.
(t1 inner join t2 on 조건)

select A.cate_name, B.pro_num, B.pro_name from category A
inner join product B on A.cate_name = B.cate_name;

-----------------------------------------------------

insert into users values('koreait', '홍길동');

insert into cart values('101', 'LG IBM Computer', 10, null, 'koreait');
insert into cart values('102', 'Apple IPhone', 15, null, 'koreait');

아이디, 이름, 상품명, 가격을 표시하세요. (t1 inner join t2 on 조건)

select 

U.userid, U.name, C.pro_name, C.pro_price

from users U 
inner join cart C on 
U.userid = C.userid_fk;

select userid_fk from cart;



다중 게시판

config(게시판 설정);

code 디비 테이블 이름 = notice -> create table notice();

create table config(
code varchar(20) not null,
title varchar(100) not null,
color varchar(20) not null,
primary key(code)
);

board(게시판)

create table notice_board(
b_id int not null auto_increment,
subject varchar(100) not null,
name varchar(10),
content text,
regdate date,
code varchar(20) not null,
primary key(b_id),
foreign key(code) references config(code) ON UPDATE CASCADE ON DELETE RESTRICT
); 

지울때는 자식부터 삭제

------------------------------------------------------

website.html
- images
- css

fonts.google.com : roboto mono

unslash.com : outdoors
fontawesome cdn : google facebook insta

와디즈
문화관광콘텐츠
전자투표시스템
미니쇼핑몰


