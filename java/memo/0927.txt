
9:00 ~ 9:50

wrox, oreilly

inheritance

Desktop : 계산기 + add, title, turnon(), turnoff()
- ms
new 생성자()

Laptop : 계산기 + add, title, turnon(), turnoff()
- mac
new 생성자()


=> 상속 이용하기

add, title, turnon(), turnoff()

Dexktop : 계산기 extends Add
- ms
new 생성자()

Laptop : 계산기 extends Add
- mac
new 생성자()

실행 inherEx01.java

---------------------------------------

10:00 ~ 10:50

inherEx01.java

inherEx02.java

기존 더하기 빼기 상속에서 곱하기 나누기 추가하기

1. 더하기, 빼기 : Cal
- main

2. 더하기, 빼기 : Cal
   추가 : 곱하기, 나누기 : AdvCal.java


---------------------------------------

11:00 ~ 11:50

사람클래스
이름, 나이
void sleep(), void eat()

학생클래스
학번
이름, 나이
void sleep(), void eat()
학생은 공부를 합니다.

사원클래스
사번
이름, 나이
void sleep(), void eat()
출근합니다.

IngerEx03.java

---------------------------------------

12:00 ~ 12:50

phone
모델, 색상
전원 on, off

InherEx04.java


---------------------------------------

2:00 ~ 2:50

Override 덮어쓰기(본체 고쳐쓰기)

Cell.java
전원 On, Off(전원을 켭니다. 끕니다.)

AndroidCell.java
전원 On, Off


AppleCell.java
전원 On, Off

Cell.Ex.java

---------------------------------------

3:00 ~ 3:50

abstract : 단일상속 extends
본체 x
Override

AbsEx

Computer
OSsystem

interface -> implements : 다중상속
본체 x
Override



DBEx.java

데이터베이스 시작, 종료
데이터베이스 쿼리 insert, update, delete, select (강제)
transaction(강제x)

Mysql
Oracle

Transaction
4단계 : 1~4 다 만족해야 성공

ATM

---------------------------------------

4:00 ~ 4:50

Polymorphism 다형성

PolyEx.java
상속(부모) -> 자식

별도 클래스 처리

다형성 -> 객체지향


커널 : kernel (두뇌)

class OS {
	sysout("운영체제를 시작합니다.");
}

MS
void run();

Apple
void run();

Linux
void run();

  

---------------------------------------